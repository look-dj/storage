#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require("../app");
var http = require("http");
const net = require("net");

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || "9018");
app.set("port", port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

function portIsOccupied(_port) {
	let _server = net.createServer().listen(_port);
	return new Promise((resolve, reject) => {
		_server.on("listening", () => {
			console.log(`the server is runnint on port ${_port}`);
			_server.close();
			resolve(_port);
		});

		_server.on("error", (err) => {
			if (err.code === "EADDRINUSE") {
				resolve(portIsOccupied(_port + 1)); //注意这句，如占用端口号+1
				console.log(`this port ${_port} is occupied.try another.`);
			} else {
				reject(err);
			}
		});
	});
}
portIsOccupied(port).then((_port) => {
	server.listen(_port);
  server.on("listening", function(){
    console.log(`Project Is Running ==>  Listening: http://localhost:${_port}/`);
  });
});

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
	var port = parseInt(val, 10);

	if (isNaN(port)) {
		// named pipe
		return val;
	}

	if (port >= 0) {
		// port number
		return port;
	}

	return false;
}
